{
  "address": "0xe06017587a9A811298166561bC8C39FE7A61389d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_whiteListManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ExcceedMaxTimes",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidProof",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotAllow",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_FREE_MINT_TIMES",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_WHITE_LIST_MINT_TIMES",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "name": "mintTimes",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "originAddress",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "originNetwork",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onMessageReceived",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "whiteListManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x3c29d63d823d61e0ae8529a87b157faaed8b51315b52c74d7ae42b2812533b95",
  "receipt": {
    "to": null,
    "from": "0xB7bC62C9380448271395d426230D6A4064E87217",
    "contractAddress": "0xe06017587a9A811298166561bC8C39FE7A61389d",
    "transactionIndex": 0,
    "gasUsed": "675406",
    "logsBloom": "0x
    "blockHash": "0x0fe8c7fd1590867ee3f3c869a4ae7bf6c2bb64bcce5dd86c01e75aa3bc2d4084",
    "transactionHash": "0x3c29d63d823d61e0ae8529a87b157faaed8b51315b52c74d7ae42b2812533b95",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 41761,
        "transactionHash": "0x3c29d63d823d61e0ae8529a87b157faaed8b51315b52c74d7ae42b2812533b95",
        "address": "0xe06017587a9A811298166561bC8C39FE7A61389d",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005ad31b262855c1de6788e5497ec0591d25c9a8c2"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x0fe8c7fd1590867ee3f3c869a4ae7bf6c2bb64bcce5dd86c01e75aa3bc2d4084"
      }
    ],
    "blockNumber": 41761,
    "cumulativeGasUsed": "675406",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5AD31B262855c1dE6788E5497EC0591D25C9a8c2",
    "0xC6f796b985D1c6c16Af96202Cb84272B2Fe4F3aB",
    "0x4e95E2c3d2456502889aDe7D4eF3bea43273394E"
  ],
  "numDeployments": 1,
  "solcInputHash": "d04ca63b2be6f24dbe8380d2735cb438",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_whiteListManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ExcceedMaxTimes\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAllow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FREE_MINT_TIMES\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WHITE_LIST_MINT_TIMES\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"mintTimes\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"originAddress\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"originNetwork\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onMessageReceived\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whiteListManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Minter.sol\":\"Minter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/Minter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { IERC721Mintable } from \\\"./interfaces/IERC721Mintable.sol\\\";\\nimport { IWhiteListManager } from \\\"./interfaces/IWhiteListManager.sol\\\";\\n\\ncontract Minter is Ownable {\\n\\n    error NotAllow();\\n\\n    error InvalidProof();\\n\\n    error ExcceedMaxTimes();\\n\\n    uint32 public constant MAX_FREE_MINT_TIMES = 1;\\n\\n    uint32 public constant MAX_WHITE_LIST_MINT_TIMES = 5;\\n\\n    uint256 public currentId;\\n\\n    address public immutable whiteListManager;\\n\\n    address public immutable nftAddress;\\n\\n    // user address => networkId => mintTimes\\n    mapping(address => mapping(uint32 => uint32)) public mintTimes;\\n\\n    constructor(address initialOwner, address _nftAddress, address _whiteListManager) Ownable(initialOwner) {\\n        nftAddress = _nftAddress;\\n        whiteListManager = _whiteListManager;\\n    }\\n\\n    function onMessageReceived(\\n        address originAddress,\\n        uint32 originNetwork,\\n        bytes memory data\\n    ) external payable onlyOwner {\\n        uint32 times = mintTimes[originAddress][originNetwork];\\n        bool verified = IWhiteListManager(whiteListManager).verified(originAddress);\\n\\n        if (!verified && data.length > 0) {\\n            (uint256 index, address account, bytes32 merkleRoot, bytes32[] memory merkleProof) = abi.decode(data, (uint256, address, bytes32, bytes32[]));\\n            if (account != originAddress) {\\n                revert InvalidProof();\\n            }\\n            if (!IWhiteListManager(whiteListManager).verify(index, account, merkleRoot, merkleProof)) {\\n                revert NotAllow();\\n            }\\n            verified = true;\\n        }\\n\\n        if (times >= (verified ? MAX_WHITE_LIST_MINT_TIMES : MAX_FREE_MINT_TIMES)) {\\n            revert ExcceedMaxTimes();\\n        }\\n\\n        mintTimes[originAddress][originNetwork] = times + 1;\\n\\n        IERC721Mintable(nftAddress).mintFor(originAddress, currentId++);\\n    }\\n}\",\"keccak256\":\"0x5d02ced506404bcff3bb75adc30a8860f1fc103185a48fcde2a3079faf8d9651\",\"license\":\"MIT\"},\"contracts/interfaces/IERC721Mintable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\ninterface IERC721Mintable {\\n    function mintFor(address to, uint256 tokenId) external;\\n}\",\"keccak256\":\"0x4063a6b265cb7d235e1656972cfeaa573f6544325f2afc023060f0d091949e6c\",\"license\":\"MIT\"},\"contracts/interfaces/IWhiteListManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.20;\\n\\ninterface IWhiteListManager {\\n    function addRoot(bytes32 merkleRoot) external;\\n\\n    function verified(address account) external view returns (bool);\\n\\n    function verify(\\n        uint256 index,\\n        address account,\\n        bytes32 merkleRoot,\\n        bytes32[] calldata merkleProof\\n    ) external returns (bool);\\n}\",\"keccak256\":\"0x32e23cc8f941a0327a898421a2139c747c6d1b81ab89b59931beb7282b91bc3e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610c37380380610c3783398101604081905261002f916100ec565b826001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006781610080565b506001600160a01b0391821660a052166080525061012f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e757600080fd5b919050565b60008060006060848603121561010157600080fd5b61010a846100d0565b9250610118602085016100d0565b9150610126604085016100d0565b90509250925092565b60805160a051610ace61016960003960008181610158015261054501526000818161010c015281816102ab01526103cb0152610ace6000f3fe6080604052600436106100b15760003560e01c8063715018a611610069578063e00dd1611161004e578063e00dd161146101c2578063f2fde38b146101e6578063fc7e224b1461020657600080fd5b8063715018a61461018f5780638da5cb5b146101a457600080fd5b806325a932641161009a57806325a93264146100fa5780635bf8633a146101465780635c2815781461017a57600080fd5b80630460afed146100b65780631806b5f2146100e5575b600080fd5b3480156100c257600080fd5b506100cb600181565b60405163ffffffff90911681526020015b60405180910390f35b6100f86100f33660046107a8565b610244565b005b34801561010657600080fd5b5061012e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100dc565b34801561015257600080fd5b5061012e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561018657600080fd5b506100cb600581565b34801561019b57600080fd5b506100f86105fc565b3480156101b057600080fd5b506000546001600160a01b031661012e565b3480156101ce57600080fd5b506101d860015481565b6040519081526020016100dc565b3480156101f257600080fd5b506100f8610201366004610860565b610610565b34801561021257600080fd5b506100cb610221366004610884565b600260209081526000928352604080842090915290825290205463ffffffff1681565b61024c61066c565b6001600160a01b03838116600081815260026020908152604080832063ffffffff888116855292528083205490517f0db065f40000000000000000000000000000000000000000000000000000000081526004810194909452169290917f000000000000000000000000000000000000000000000000000000000000000090911690630db065f490602401602060405180830381865afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031891906108b9565b905080158015610329575060008351115b15610488576000806000808680602001905181019061034891906108db565b9350935093509350886001600160a01b0316836001600160a01b03161461039b576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f8a45fa2f0000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638a45fa2f906104069087908790879087906004016109a8565b6020604051808303816000875af1158015610425573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044991906108b9565b61047f576040517fdc4a92ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60019450505050505b80610494576001610497565b60055b63ffffffff168263ffffffff16106104db576040517f4be3de2d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e6826001610a3c565b6001600160a01b03868116600090815260026020908152604080832063ffffffff8a811685529252822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000169490911693909317909255600180547f00000000000000000000000000000000000000000000000000000000000000009092169263da1919b3928992909161057b83610a60565b909155506040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156105dd57600080fd5b505af11580156105f1573d6000803e3d6000fd5b505050505050505050565b61060461066c565b61060e60006106b2565b565b61061861066c565b6001600160a01b038116610660576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b610669816106b2565b50565b6000546001600160a01b0316331461060e576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610657565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461066957600080fd5b803563ffffffff8116811461074357600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156107a0576107a0610748565b604052919050565b6000806000606084860312156107bd57600080fd5b83356107c88161071a565b925060206107d785820161072f565b9250604085013567ffffffffffffffff808211156107f457600080fd5b818701915087601f83011261080857600080fd5b81358181111561081a5761081a610748565b61082c84601f19601f84011601610777565b9150808252888482850101111561084257600080fd5b80848401858401376000848284010152508093505050509250925092565b60006020828403121561087257600080fd5b813561087d8161071a565b9392505050565b6000806040838503121561089757600080fd5b82356108a28161071a565b91506108b06020840161072f565b90509250929050565b6000602082840312156108cb57600080fd5b8151801515811461087d57600080fd5b600080600080608085870312156108f157600080fd5b845193506020808601516109048161071a565b60408701516060880151919550935067ffffffffffffffff8082111561092957600080fd5b818801915088601f83011261093d57600080fd5b81518181111561094f5761094f610748565b8060051b9150610960848301610777565b818152918301840191848101908b84111561097a57600080fd5b938501935b838510156109985784518252938501939085019061097f565b989b979a50959850505050505050565b60006080820186835260206001600160a01b038716818501528560408501526080606085015281855180845260a086019150828701935060005b818110156109fe578451835293830193918301916001016109e2565b50909998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b63ffffffff818116838216019080821115610a5957610a59610a0d565b5092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a9157610a91610a0d565b506001019056fea2646970667358221220ef8824a967c1973926f41041806e74c7c564d7411a7279a49de2ff8baeaadb3e64736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100b15760003560e01c8063715018a611610069578063e00dd1611161004e578063e00dd161146101c2578063f2fde38b146101e6578063fc7e224b1461020657600080fd5b8063715018a61461018f5780638da5cb5b146101a457600080fd5b806325a932641161009a57806325a93264146100fa5780635bf8633a146101465780635c2815781461017a57600080fd5b80630460afed146100b65780631806b5f2146100e5575b600080fd5b3480156100c257600080fd5b506100cb600181565b60405163ffffffff90911681526020015b60405180910390f35b6100f86100f33660046107a8565b610244565b005b34801561010657600080fd5b5061012e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100dc565b34801561015257600080fd5b5061012e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561018657600080fd5b506100cb600581565b34801561019b57600080fd5b506100f86105fc565b3480156101b057600080fd5b506000546001600160a01b031661012e565b3480156101ce57600080fd5b506101d860015481565b6040519081526020016100dc565b3480156101f257600080fd5b506100f8610201366004610860565b610610565b34801561021257600080fd5b506100cb610221366004610884565b600260209081526000928352604080842090915290825290205463ffffffff1681565b61024c61066c565b6001600160a01b03838116600081815260026020908152604080832063ffffffff888116855292528083205490517f0db065f40000000000000000000000000000000000000000000000000000000081526004810194909452169290917f000000000000000000000000000000000000000000000000000000000000000090911690630db065f490602401602060405180830381865afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031891906108b9565b905080158015610329575060008351115b15610488576000806000808680602001905181019061034891906108db565b9350935093509350886001600160a01b0316836001600160a01b03161461039b576040517f09bde33900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f8a45fa2f0000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638a45fa2f906104069087908790879087906004016109a8565b6020604051808303816000875af1158015610425573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044991906108b9565b61047f576040517fdc4a92ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60019450505050505b80610494576001610497565b60055b63ffffffff168263ffffffff16106104db576040517f4be3de2d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e6826001610a3c565b6001600160a01b03868116600090815260026020908152604080832063ffffffff8a811685529252822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000169490911693909317909255600180547f00000000000000000000000000000000000000000000000000000000000000009092169263da1919b3928992909161057b83610a60565b909155506040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156105dd57600080fd5b505af11580156105f1573d6000803e3d6000fd5b505050505050505050565b61060461066c565b61060e60006106b2565b565b61061861066c565b6001600160a01b038116610660576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b610669816106b2565b50565b6000546001600160a01b0316331461060e576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610657565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461066957600080fd5b803563ffffffff8116811461074357600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156107a0576107a0610748565b604052919050565b6000806000606084860312156107bd57600080fd5b83356107c88161071a565b925060206107d785820161072f565b9250604085013567ffffffffffffffff808211156107f457600080fd5b818701915087601f83011261080857600080fd5b81358181111561081a5761081a610748565b61082c84601f19601f84011601610777565b9150808252888482850101111561084257600080fd5b80848401858401376000848284010152508093505050509250925092565b60006020828403121561087257600080fd5b813561087d8161071a565b9392505050565b6000806040838503121561089757600080fd5b82356108a28161071a565b91506108b06020840161072f565b90509250929050565b6000602082840312156108cb57600080fd5b8151801515811461087d57600080fd5b600080600080608085870312156108f157600080fd5b845193506020808601516109048161071a565b60408701516060880151919550935067ffffffffffffffff8082111561092957600080fd5b818801915088601f83011261093d57600080fd5b81518181111561094f5761094f610748565b8060051b9150610960848301610777565b818152918301840191848101908b84111561097a57600080fd5b938501935b838510156109985784518252938501939085019061097f565b989b979a50959850505050505050565b60006080820186835260206001600160a01b038716818501528560408501526080606085015281855180845260a086019150828701935060005b818110156109fe578451835293830193918301916001016109e2565b50909998505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b63ffffffff818116838216019080821115610a5957610a59610a0d565b5092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a9157610a91610a0d565b506001019056fea2646970667358221220ef8824a967c1973926f41041806e74c7c564d7411a7279a49de2ff8baeaadb3e64736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/Minter.sol:Minter",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 738,
        "contract": "contracts/Minter.sol:Minter",
        "label": "currentId",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 748,
        "contract": "contracts/Minter.sol:Minter",
        "label": "mintTimes",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_uint32,t_uint32))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint32,t_uint32))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint32 => uint32))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint32,t_uint32)"
      },
      "t_mapping(t_uint32,t_uint32)": {
        "encoding": "mapping",
        "key": "t_uint32",
        "label": "mapping(uint32 => uint32)",
        "numberOfBytes": "32",
        "value": "t_uint32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}